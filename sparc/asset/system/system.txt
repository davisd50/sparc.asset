A System
---------
A system is a service, application, or other entity that has an Id, name,
and description.

Create a basic system
>>> kwargs = {
... 		  'id': 'my system id',
...           'name': u'A system name',
...           'description': u'a system description',
...			  'type': u'badtest'
... 		 }

Our first attempt to create the system will fail, because we have not yet
defined a valid system type within the testing vocabulary 
>>> from zope.component import createObject
>>> from zope.component import ComponentLookupError
>>> from zope.schema.interfaces import ConstraintNotSatisfied
>>> try:
...     createObject(u'sparc.asset.system', **kwargs)
...     assert False
... except (ConstraintNotSatisfied, ComponentLookupError):
... 	pass

Now we'll update with a valid type
>>> kwargs['type'] = 'test_type_1'

Now, let's try creating our system again
>>> from sparc.asset.system import ISystem
>>> my_system = createObject(u'sparc.asset.system', **kwargs)
>>> my_system.getId()
'my system id'
>>> my_system.name == 'A system name'
True
>>> my_system.type
'test_type_1'
>>> ISystem.providedBy(my_system)
True

Test a persistence
>>> from persistent.interfaces import IPersistent
>>> my_system = createObject(u'sparc.asset.persistent.system', **kwargs)
>>> IPersistent.providedBy(my_system)
True
>>> ISystem.providedBy(my_system)
True
>>> ISystem.providedBy(my_system)
True